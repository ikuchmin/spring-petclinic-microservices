spring:
  application:
    name: vets-service
  profiles:
    group:
      dev-local:
        - postgres
        - local
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
  cache:
    cache-names: vets
  cloud:
    config:
      enabled: false
      fail-fast: true
      discovery:
        service-id: config-server
        enabled: true
  config:
    import: "optional:configserver:"

vets:
  cache:
    ttl: 60
    heap-size: 100

eureka:
  instance:
    # enable to register multiple app instances with a random server port
    instance-id: ${spring.application.name}:${random.uuid}
  client:
    enabled: false

logging.level.org.springframework: INFO

---
spring:
  config:
    activate:
      on-profile: postgres
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}/${POSTGRES_DB_NAME:pc_vet}
    username: ${POSTGRES_USERNAME:petclinic}
    password: ${POSTGRES_PASSWORD:petclinic}
  sql:
    init:
      schema-locations: classpath*:db/postgres/schema.sql
      data-locations: classpath*:db/postgres/data.sql
      mode: ALWAYS

---
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost:3306}/${MYSQL_DB_NAME:petclinic}?useSSL=false
    username: ${MYSQL_USERNAME:root}
    password: ${MYSQL_PASSWORD:petclinic}
  sql:
    init:
      schema-locations: classpath*:db/mysql/schema.sql
      data-locations: classpath*:db/mysql/data.sql
      mode: ALWAYS

---
spring:
  config:
    activate:
      on-profile: hsql
  sql:
    init:
      schema-locations: classpath*:db/hsqldb/schema.sql
      data-locations: classpath*:db/hsqldb/data.sql

---
spring:
  config:
    activate:
      on-profile: discovery
eureka:
  client:
    enabled: true
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}

---
spring:
  config:
    activate:
      on-profile: cloudconfig
  cloud:
    config:
      enabled: true

