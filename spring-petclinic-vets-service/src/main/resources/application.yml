spring:
  application:
    name: vets-service
  sql:
    init:
      schema-locations: classpath*:db/hsqldb/schema.sql
      data-locations: classpath*:db/hsqldb/data.sql
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
  cache:
    cache-names: vets
  profiles:
    active: production

vets:
  cache:
    ttl: 60
    heap-size: 100

server:
  port: 8083

eureka:
  instance:
    # enable to register multiple app instances with a random server port
    instance-id: ${spring.application.name}:${random.uuid}
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/

logging.level.org.springframework: INFO

---
spring:
  config:
    activate:
      on-profile: postgres
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost/pc_vet
    username: petclinic
    password: petclinic
  sql:
    init:
      schema-locations: classpath*:db/postgres/schema.sql
      data-locations: classpath*:db/postgres/data.sql
      mode: ALWAYS

---
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    url: jdbc:mysql://localhost:3306/petclinic?useSSL=false
    username: root
    password: petclinic
  sql:
    init:
      schema-locations: classpath*:db/mysql/schema.sql
      data-locations: classpath*:db/mysql/data.sql
      mode: ALWAYS
