spring:
  main:
    web-application-type: reactive
  application:
    name: genai-service
  sql:
    init:
      schema-locations: classpath*:db/hsqldb/schema.sql
      data-locations: classpath*:db/hsqldb/data.sql
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
  profiles:
    active: production
  ai:
    chat:
      client:
        enabled: true
    # These apply when using spring-ai-azure-openai-spring-boot-starter
    azure:
      openai:
        api-key: ${AZURE_OPENAI_KEY}
        endpoint: ${AZURE_OPENAI_ENDPOINT}
        chat:
          options:
            temperature: 0.7
            deployment-name: gpt-4o
    # These apply when using spring-ai-openai-spring-boot-starter
    openai:
      api-key: ${OPENAI_API_KEY:demo}
      chat:
        options:
            temperature: 0.7
            model: gpt-4o-mini

server:
  port: 8084

eureka:
  instance:
    # enable to register multiple app instances with a random server port
    instance-id: ${spring.application.name}:${random.uuid}
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/

logging.level.org.springframework: INFO

logging:
  level:
    org:
      springframework:
        ai:
          chat:
            client:
              advisor: DEBUG
