services:
  discovery-server:
    image: spring-petclinic-discovery-server:3.4.1
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 1024M
    ports:
      - 8761:8761
    environment:
      SPRING_PROFILES_ACTIVE: compose
      EUREKA_INSTANCE_HOSTNAME: discovery-server

  config-server:
    image: spring-petclinic-config-server:3.4.1
    restart: on-failure
    volumes:
      - ./docker/config-server/keystore:/workspace/keystore
    ports:
      - 8888:8888
      - 5005:5005
    environment:
      SPRING_PROFILES_ACTIVE: compose
      EUREKA_SERVER_HOST: discovery-server:8761
      ENCRYPT_KEYSTORE_LOCATION: /keystore/keystore.p12
      ENCRYPT_KEYSTORE_ALIAS: configserver
      ENCRYPT_KEYSTORE_PASSWORD: testtest
    depends_on:
      discovery-server:
        condition: service_started

  customers-service:
    image: spring-petclinic-customers-service:3.4.1
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 1024M
    ports:
      - 8081:8080
    environment:
      SPRING_PROFILES_ACTIVE: compose
      EUREKA_SERVER_HOST: discovery-server:8761
      POSTGRES_HOST: postgres:5432
      POSTGRES_USERNAME: petclinic
      POSTGRES_PASSWORD: petclinic
    depends_on:
      discovery-server:
        condition: service_started
      config-server:
        condition: service_started
      postgres:
        condition: service_healthy

  visits-service:
    image: spring-petclinic-visits-service:3.4.1
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 1024M
    ports:
      - 8082:8080
    environment:
      SPRING_PROFILES_ACTIVE: compose
      EUREKA_SERVER_HOST: discovery-server:8761
      POSTGRES_HOST: postgres:5432
      POSTGRES_USERNAME: petclinic
      POSTGRES_PASSWORD: petclinic
    depends_on:
      discovery-server:
        condition: service_started
      config-server:
        condition: service_started
      postgres:
        condition: service_healthy

  vets-service:
    image: spring-petclinic-vets-service:3.4.1
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 1024M
    ports:
      - 8083:8080
    environment:
      SPRING_PROFILES_ACTIVE: compose
      EUREKA_SERVER_HOST: discovery-server:8761
      POSTGRES_HOST: postgres:5432
      POSTGRES_USERNAME: petclinic
      POSTGRES_PASSWORD: petclinic
    depends_on:
      discovery-server:
        condition: service_started
      config-server:
        condition: service_started
      postgres:
        condition: service_healthy

  genai-service:
    image: spring-petclinic-genai-service:3.4.1
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 1024M
    ports:
      - 8084:8080
    environment:
      SPRING_PROFILES_ACTIVE: compose
      EUREKA_SERVER_HOST: discovery-server:8761
    depends_on:
      discovery-server:
        condition: service_started
      config-server:
        condition: service_started

  api-gateway:
    image: spring-petclinic-api-gateway:3.4.1
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 1024M
    ports:
      - 8080:8080
    environment:
      SPRING_PROFILES_ACTIVE: compose
      EUREKA_SERVER_HOST: discovery-server:8761
    depends_on:
      discovery-server:
        condition: service_started
      config-server:
        condition: service_started

  postgres:
    image: postgres:17.2
    restart: "no"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/initdb:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_USER: petclinic
      POSTGRES_PASSWORD: petclinic
      POSTGRES_DB: petclinic
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:8.14.0
    restart: "no"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
      - ./docker/pgadmin/pgpass:/pgadmin4/pgpass
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    entrypoint: /bin/sh -c "chmod 600 /pgadmin4/pgpass; /entrypoint.sh;"
volumes:
  postgres_data:
  pgadmin_data:
